package org.example.technihongo.core.mail;

import jakarta.mail.MessagingException;
import jakarta.mail.internet.MimeMessage;
import org.example.technihongo.entities.Student;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.mail.SimpleMailMessage;
import org.springframework.mail.javamail.JavaMailSender;
import org.springframework.mail.javamail.MimeMessageHelper;
import org.springframework.stereotype.Service;

@Service
public class EmailService {

    @Autowired
    private JavaMailSender mailSender;

    public void sendSimpleEmail(String toEmail, String subject, String body) {
        SimpleMailMessage message = new SimpleMailMessage();
        message.setTo(toEmail);
        message.setSubject(subject);
        message.setText(body);
        message.setFrom("<YOUR_EMAIL>");
        mailSender.send(message);
    }

    public void sendVerificationEmail(String email, String token) {
        SimpleMailMessage message = new SimpleMailMessage();
        String link = "<your-fe-deployment-link>" + token;
        String subject = "X√°c nh·∫≠n t√†i kho·∫£n email";
        String body = "Vui l√≤ng nh·∫•n v√†o link ƒë·ªÉ x√°c nh·∫≠n t√†i kho·∫£n c·ªßa b·∫°n: " + link;

        message.setTo(email);
        message.setSubject(subject);
        message.setText(body);
        message.setFrom("<YOUR_EMAIL>");
        mailSender.send(message);
    }

    public void sendReminderEmail(Student student) {
        try {
            MimeMessage message = mailSender.createMimeMessage();
            MimeMessageHelper helper = new MimeMessageHelper(message, true, "UTF-8");

            helper.setTo(student.getUser().getEmail());
            helper.setSubject("Nh·∫Øc nh·ªü h·ªçc t·∫≠p h√†ng ng√†y");
            helper.setText(
                    String.format(
                            "Ch√†o %s,<br><br>" +
                                    "ƒê√£ ƒë·∫øn gi·ªù h·ªçc c·ªßa b·∫°n! M·ª•c ti√™u h√¥m nay l√† %d ph√∫t.<br>" +
                                    "Ch√∫c b·∫°n h·ªçc t·∫≠p hi·ªáu qu·∫£!<br><br>" +
                                    "Tr√¢n tr·ªçng,<br>TechNihongo Team",
                            student.getUser().getUserName(),
                            student.getDailyGoal()
                    ),
                    true
            );

            mailSender.send(message);
        } catch (MessagingException ignored) {
        }
    }

    public void sendViolationEmail(Student student, String flashcardSetTitle, String actionTaken, int violationCount) {
        try {
            MimeMessage message = mailSender.createMimeMessage();
            MimeMessageHelper helper = new MimeMessageHelper(message, true, "UTF-8");
            String studentEmail = student.getUser().getEmail();
            String studentName = student.getUser().getUserName();

            String subject;
            String body;

            if (violationCount == 1) {
                subject = "B·ªô Flashcard c·ªßa b·∫°n c·∫ßn ƒë∆∞·ª£c ch·ªânh s·ª≠a m·ªôt ch√∫t! üòä";
                body = String.format(
                        "Ch√†o %s,<br><br>" +
                                "C·∫£m ∆°n b·∫°n ƒë√£ ƒë√≥ng g√≥p n·ªôi dung cho TechNihongo! üåü Tuy nhi√™n, ch√∫ng t√¥i nh·∫≠n th·∫•y b·ªô Flashcard <b>%s</b> c·ªßa b·∫°n c√≥ m·ªôt s·ªë n·ªôi dung ch∆∞a ph√π h·ª£p v·ªõi quy t·∫Øc c·ªông ƒë·ªìng c·ªßa ch√∫ng t√¥i:<br>" +
                                "<b>L√Ω do</b>: %s.<br><br>" +
                                "B·ªô Flashcard c·ªßa b·∫°n ƒë√£ b·ªã ·∫©n kh·ªèi ch·∫ø ƒë·ªô c√¥ng khai. B·∫°n c√≥ th·ªÉ ch·ªânh s·ª≠a b·ªô Flashcard n√†y trong v√≤ng <b>24 gi·ªù</b> ƒë·ªÉ ƒë·∫£m b·∫£o n√≥ tu√¢n th·ªß quy t·∫Øc. Sau khi ch·ªânh s·ª≠a, b·∫°n c√≥ th·ªÉ y√™u c·∫ßu ƒë√°nh gi√° l·∫°i ƒë·ªÉ ƒë∆∞a n·ªôi dung tr·ªü l·∫°i ch·∫ø ƒë·ªô c√¥ng khai.<br><br>" +
                                "N·∫øu c·∫ßn h·ªó tr·ª£, b·∫°n c√≥ th·ªÉ li√™n h·ªá v·ªõi ƒë·ªôi ng≈© Admin qua <a href='mailto:technihongo.work@gmail.com'>technihongo.work@gmail.com</a>.<br>" +
                                "C·∫£m ∆°n b·∫°n v√¨ ƒë√£ c√πng x√¢y d·ª±ng m·ªôt c·ªông ƒë·ªìng h·ªçc t·∫≠p vui v·∫ª v√† ch·∫•t l∆∞·ª£ng!<br><br>" +
                                "Tr√¢n tr·ªçng,<br>TechNihongo Team",
                        studentName, flashcardSetTitle, actionTaken
                );
            } else {
                subject = "B·ªô Flashcard c·ªßa b·∫°n ƒë√£ b·ªã x√≥a";
                body = String.format(
                        "Ch√†o %s,<br><br>" +
                                "C·∫£m ∆°n b·∫°n v√¨ nh·ªØng ƒë√≥ng g√≥p cho TechNihongo! Tuy nhi√™n, ch√∫ng t√¥i r·∫•t ti·∫øc ph·∫£i th√¥ng b√°o b·ªô Flashcard <b>%s</b> c·ªßa b·∫°n ƒë√£ vi ph·∫°m quy t·∫Øc c·ªông ƒë·ªìng l·∫ßn th·ª© %d:<br>" +
                                "<b>L√Ω do</b>: %s.<br><br>" +
                                "Theo quy ƒë·ªãnh c·ªßa ch√∫ng t√¥i, b·ªô Flashcard n√†y ƒë√£ b·ªã x√≥a do vi ph·∫°m t·ª´ l·∫ßn th·ª© hai tr·ªü l√™n. B·∫°n v·∫´n c√≥ th·ªÉ t·∫°o c√°c b·ªô Flashcard m·ªõi, nh∆∞ng vui l√≤ng ƒë·∫£m b·∫£o ch√∫ng tu√¢n th·ªß quy t·∫Øc c·ªông ƒë·ªìng c·ªßa ch√∫ng t√¥i.<br><br>" +
                                "ƒê·ªÉ hi·ªÉu r√µ h∆°n v·ªÅ quy t·∫Øc c·ªông ƒë·ªìng, ho·∫∑c n·∫øu b·∫°n c√≥ b·∫•t k·ª≥ th·∫Øc m·∫Øc n√†o, vui l√≤ng li√™n h·ªá ƒë·ªôi ng≈© Admin qua <a href='mailto:technihongo.work@gmail.com'>technihongo.work@gmail.com</a>.<br>" +
                                "Ch√∫ng t√¥i mong r·∫±ng b·∫°n s·∫Ω ti·∫øp t·ª•c ƒë√≥ng g√≥p nh·ªØng n·ªôi dung ch·∫•t l∆∞·ª£ng cho c·ªông ƒë·ªìng TechNihongo!<br><br>" +
                                "Tr√¢n tr·ªçng,<br>TechNihongo Team",
                        studentName, flashcardSetTitle, violationCount, actionTaken
                );
            }

            helper.setTo(studentEmail);
            helper.setSubject(subject);
            helper.setText(body, true);
            helper.setFrom("<YOUR_EMAIL>");
            mailSender.send(message);
        } catch (MessagingException e) {
            System.err.println("Failed to send violation email to " + student.getUser().getEmail() + ": " + e.getMessage());
        }
    }
}